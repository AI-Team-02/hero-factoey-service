version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: hero-factory-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - hero-factory-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    container_name: hero-factory-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_URL=${DB_URL}
      - DB_USER_NAME=${DB_USER_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql/init:/docker-entrypoint-initdb.d
    command:
      - "postgres"
      - "-c"
      - "shared_preload_libraries=vector"
    networks:
      - hero-factory-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: hero-factory-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - hero-factory-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hero-factory-app
    ports:
      - "8081:8081"
    volumes:
      - /logs:/logs
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - TZ=Asia/Seoul
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hero-factory-network
    restart: unless-stopped

networks:
  hero-factory-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local